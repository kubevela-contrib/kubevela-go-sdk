/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hpa

import (
	"encoding/json"
	"errors"

	"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
	"github.com/oam-dev/kubevela-core-api/pkg/oam/util"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis"
	sdkcommon "github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/common"
	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the HpaSpec type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &HpaSpec{}

// HpaSpec struct for HpaSpec
type HpaSpec struct {
	Cpu *Cpu `json:"cpu"`
	// Specify the maximum number of of replicas to which the autoscaler can scale up
	Max *int32 `json:"max"`
	Mem *Mem   `json:"mem,omitempty"`
	// Specify the minimal number of replicas to which the autoscaler can scale down
	Min *int32 `json:"min"`
	// Specify custom metrics of pod type
	PodCustomMetrics []PodCustomMetrics `json:"podCustomMetrics,omitempty"`
	// Specify the apiVersion of scale target
	TargetAPIVersion *string `json:"targetAPIVersion"`
	// Specify the kind of scale target
	TargetKind *string `json:"targetKind"`
}

// NewHpaSpecWith instantiates a new HpaSpec object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewHpaSpecWith(cpu Cpu, max int32, min int32, targetAPIVersion string, targetKind string) *HpaSpec {
	this := HpaSpec{}
	this.Cpu = &cpu
	this.Max = &max
	this.Min = &min
	this.TargetAPIVersion = &targetAPIVersion
	this.TargetKind = &targetKind
	return &this
}

// NewHpaSpecWithDefault instantiates a new HpaSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHpaSpecWithDefault() *HpaSpec {
	this := HpaSpec{}
	var max int32 = 10
	this.Max = &max
	var min int32 = 1
	this.Min = &min
	var targetAPIVersion string = "apps/v1"
	this.TargetAPIVersion = &targetAPIVersion
	var targetKind string = "Deployment"
	this.TargetKind = &targetKind
	return &this
}

// NewHpaSpec is short for NewHpaSpecWithDefault which instantiates a new HpaSpec object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHpaSpec() *HpaSpec {
	return NewHpaSpecWithDefault()
}

// NewHpaSpecEmpty instantiates a new HpaSpec object with no properties set.
// This constructor will not assign any default values to properties.
func NewHpaSpecEmpty() *HpaSpec {
	this := HpaSpec{}
	return &this
}

// NewHpaSpecs converts a list HpaSpec pointers to objects.
// This is helpful when the SetHpaSpec requires a list of objects
func NewHpaSpecList(ps ...*HpaSpec) []HpaSpec {
	objs := []HpaSpec{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this HpaSpec
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *HpaTrait) Validate() error {
	if o.Properties.Cpu == nil {
		return errors.New("Cpu in HpaSpec must be set")
	}
	if o.Properties.Max == nil {
		return errors.New("Max in HpaSpec must be set")
	}
	if o.Properties.Min == nil {
		return errors.New("Min in HpaSpec must be set")
	}
	if o.Properties.TargetAPIVersion == nil {
		return errors.New("TargetAPIVersion in HpaSpec must be set")
	}
	if o.Properties.TargetKind == nil {
		return errors.New("TargetKind in HpaSpec must be set")
	}
	// validate all nested properties
	if o.Properties.Cpu != nil {
		if err := o.Properties.Cpu.Validate(); err != nil {
			return err
		}
	}
	if o.Properties.Mem != nil {
		if err := o.Properties.Mem.Validate(); err != nil {
			return err
		}
	}
	return nil
}

// GetCpu returns the Cpu field value
func (o *HpaTrait) GetCpu() Cpu {
	if o == nil {
		var ret Cpu
		return ret
	}

	return *o.Properties.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *HpaTrait) GetCpuOk() (*Cpu, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties.Cpu, true
}

// SetCpu sets field value
func (o *HpaTrait) SetCpu(v Cpu) *HpaTrait {
	o.Properties.Cpu = &v
	return o
}

// GetMax returns the Max field value
func (o *HpaTrait) GetMax() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return *o.Properties.Max
}

// GetMaxOk returns a tuple with the Max field value
// and a boolean to check if the value has been set.
func (o *HpaTrait) GetMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties.Max, true
}

// SetMax sets field value
func (o *HpaTrait) SetMax(v int32) *HpaTrait {
	o.Properties.Max = &v
	return o
}

// GetMem returns the Mem field value if set, zero value otherwise.
func (o *HpaTrait) GetMem() Mem {
	if o == nil || utils.IsNil(o.Properties.Mem) {
		var ret Mem
		return ret
	}
	return *o.Properties.Mem
}

// GetMemOk returns a tuple with the Mem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HpaTrait) GetMemOk() (*Mem, bool) {
	if o == nil || utils.IsNil(o.Properties.Mem) {
		return nil, false
	}
	return o.Properties.Mem, true
}

// HasMem returns a boolean if a field has been set.
func (o *HpaTrait) HasMem() bool {
	if o != nil && !utils.IsNil(o.Properties.Mem) {
		return true
	}

	return false
}

// SetMem gets a reference to the given Mem and assigns it to the mem field.
// Mem:
func (o *HpaTrait) SetMem(v Mem) *HpaTrait {
	o.Properties.Mem = &v
	return o
}

// GetMin returns the Min field value
func (o *HpaTrait) GetMin() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return *o.Properties.Min
}

// GetMinOk returns a tuple with the Min field value
// and a boolean to check if the value has been set.
func (o *HpaTrait) GetMinOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties.Min, true
}

// SetMin sets field value
func (o *HpaTrait) SetMin(v int32) *HpaTrait {
	o.Properties.Min = &v
	return o
}

// GetPodCustomMetrics returns the PodCustomMetrics field value if set, zero value otherwise.
func (o *HpaTrait) GetPodCustomMetrics() []PodCustomMetrics {
	if o == nil || utils.IsNil(o.Properties.PodCustomMetrics) {
		var ret []PodCustomMetrics
		return ret
	}
	return o.Properties.PodCustomMetrics
}

// GetPodCustomMetricsOk returns a tuple with the PodCustomMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HpaTrait) GetPodCustomMetricsOk() ([]PodCustomMetrics, bool) {
	if o == nil || utils.IsNil(o.Properties.PodCustomMetrics) {
		return nil, false
	}
	return o.Properties.PodCustomMetrics, true
}

// HasPodCustomMetrics returns a boolean if a field has been set.
func (o *HpaTrait) HasPodCustomMetrics() bool {
	if o != nil && !utils.IsNil(o.Properties.PodCustomMetrics) {
		return true
	}

	return false
}

// SetPodCustomMetrics gets a reference to the given []PodCustomMetrics and assigns it to the podCustomMetrics field.
// PodCustomMetrics:  Specify custom metrics of pod type
func (o *HpaTrait) SetPodCustomMetrics(v []PodCustomMetrics) *HpaTrait {
	o.Properties.PodCustomMetrics = v
	return o
}

// GetTargetAPIVersion returns the TargetAPIVersion field value
func (o *HpaTrait) GetTargetAPIVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Properties.TargetAPIVersion
}

// GetTargetAPIVersionOk returns a tuple with the TargetAPIVersion field value
// and a boolean to check if the value has been set.
func (o *HpaTrait) GetTargetAPIVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties.TargetAPIVersion, true
}

// SetTargetAPIVersion sets field value
func (o *HpaTrait) SetTargetAPIVersion(v string) *HpaTrait {
	o.Properties.TargetAPIVersion = &v
	return o
}

// GetTargetKind returns the TargetKind field value
func (o *HpaTrait) GetTargetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Properties.TargetKind
}

// GetTargetKindOk returns a tuple with the TargetKind field value
// and a boolean to check if the value has been set.
func (o *HpaTrait) GetTargetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties.TargetKind, true
}

// SetTargetKind sets field value
func (o *HpaTrait) SetTargetKind(v string) *HpaTrait {
	o.Properties.TargetKind = &v
	return o
}

func (o HpaSpec) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HpaSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cpu"] = o.Cpu
	toSerialize["max"] = o.Max
	if !utils.IsNil(o.Mem) {
		toSerialize["mem"] = o.Mem
	}
	toSerialize["min"] = o.Min
	if !utils.IsNil(o.PodCustomMetrics) {
		toSerialize["podCustomMetrics"] = o.PodCustomMetrics
	}
	toSerialize["targetAPIVersion"] = o.TargetAPIVersion
	toSerialize["targetKind"] = o.TargetKind
	return toSerialize, nil
}

type NullableHpaSpec struct {
	value *HpaSpec
	isSet bool
}

func (v *NullableHpaSpec) Get() *HpaSpec {
	return v.value
}

func (v *NullableHpaSpec) Set(val *HpaSpec) {
	v.value = val
	v.isSet = true
}

func (v *NullableHpaSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableHpaSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHpaSpec(val *HpaSpec) *NullableHpaSpec {
	return &NullableHpaSpec{value: val, isSet: true}
}

func (v NullableHpaSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHpaSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

const HpaType = "hpa"

func init() {
	sdkcommon.RegisterTrait(HpaType, FromTrait)
}

type HpaTrait struct {
	Base       apis.TraitBase
	Properties HpaSpec
}

func Hpa() *HpaTrait {
	h := &HpaTrait{Base: apis.TraitBase{}}
	return h
}

func (h *HpaTrait) Build() common.ApplicationTrait {
	res := common.ApplicationTrait{
		Properties: util.Object2RawExtension(h.Properties),
		Type:       HpaType,
	}
	return res
}

func (h *HpaTrait) FromTrait(from common.ApplicationTrait) (*HpaTrait, error) {
	var properties HpaSpec
	if from.Properties != nil {
		err := json.Unmarshal(from.Properties.Raw, &properties)
		if err != nil {
			return nil, err
		}
	}
	h.Base.Type = HpaType
	h.Properties = properties
	return h, nil
}

func FromTrait(from common.ApplicationTrait) (apis.Trait, error) {
	h := &HpaTrait{}
	return h.FromTrait(from)
}

func (h *HpaTrait) DefType() string {
	return HpaType
}
