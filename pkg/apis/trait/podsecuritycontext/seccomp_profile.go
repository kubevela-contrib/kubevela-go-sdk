/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package podsecuritycontext

import (
	"encoding/json"
	"errors"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the SeccompProfile type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &SeccompProfile{}

// SeccompProfile Specify the seccomp profile for the pod
type SeccompProfile struct {
	LocalhostProfile *string `json:"localhostProfile,omitempty"`
	Type             *string `json:"type"`
}

// NewSeccompProfileWith instantiates a new SeccompProfile object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewSeccompProfileWith(type_ string) *SeccompProfile {
	this := SeccompProfile{}
	this.Type = &type_
	return &this
}

// NewSeccompProfileWithDefault instantiates a new SeccompProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeccompProfileWithDefault() *SeccompProfile {
	this := SeccompProfile{}
	return &this
}

// NewSeccompProfile is short for NewSeccompProfileWithDefault which instantiates a new SeccompProfile object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeccompProfile() *SeccompProfile {
	return NewSeccompProfileWithDefault()
}

// NewSeccompProfileEmpty instantiates a new SeccompProfile object with no properties set.
// This constructor will not assign any default values to properties.
func NewSeccompProfileEmpty() *SeccompProfile {
	this := SeccompProfile{}
	return &this
}

// NewSeccompProfiles converts a list SeccompProfile pointers to objects.
// This is helpful when the SetSeccompProfile requires a list of objects
func NewSeccompProfileList(ps ...*SeccompProfile) []SeccompProfile {
	objs := []SeccompProfile{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this SeccompProfile
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *SeccompProfile) Validate() error {
	if o.Type == nil {
		return errors.New("Type in SeccompProfile must be set")
	}
	// validate all nested properties
	return nil
}

// GetLocalhostProfile returns the LocalhostProfile field value if set, zero value otherwise.
func (o *SeccompProfile) GetLocalhostProfile() string {
	if o == nil || utils.IsNil(o.LocalhostProfile) {
		var ret string
		return ret
	}
	return *o.LocalhostProfile
}

// GetLocalhostProfileOk returns a tuple with the LocalhostProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeccompProfile) GetLocalhostProfileOk() (*string, bool) {
	if o == nil || utils.IsNil(o.LocalhostProfile) {
		return nil, false
	}
	return o.LocalhostProfile, true
}

// HasLocalhostProfile returns a boolean if a field has been set.
func (o *SeccompProfile) HasLocalhostProfile() bool {
	if o != nil && !utils.IsNil(o.LocalhostProfile) {
		return true
	}

	return false
}

// SetLocalhostProfile gets a reference to the given string and assigns it to the localhostProfile field.
// LocalhostProfile:
func (o *SeccompProfile) SetLocalhostProfile(v string) *SeccompProfile {
	o.LocalhostProfile = &v
	return o
}

// GetType returns the Type field value
func (o *SeccompProfile) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SeccompProfile) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *SeccompProfile) SetType(v string) *SeccompProfile {
	o.Type = &v
	return o
}

func (o SeccompProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeccompProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.LocalhostProfile) {
		toSerialize["localhostProfile"] = o.LocalhostProfile
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableSeccompProfile struct {
	value *SeccompProfile
	isSet bool
}

func (v *NullableSeccompProfile) Get() *SeccompProfile {
	return v.value
}

func (v *NullableSeccompProfile) Set(val *SeccompProfile) {
	v.value = val
	v.isSet = true
}

func (v *NullableSeccompProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableSeccompProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeccompProfile(val *SeccompProfile) *NullableSeccompProfile {
	return &NullableSeccompProfile{value: val, isSet: true}
}

func (v NullableSeccompProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeccompProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
