/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
	"errors"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the Limits type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Limits{}

// Limits struct for Limits
type Limits struct {
	Storage *string `json:"storage"`
}

// NewLimitsWith instantiates a new Limits object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewLimitsWith(storage string) *Limits {
	this := Limits{}
	this.Storage = &storage
	return &this
}

// NewLimitsWithDefault instantiates a new Limits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLimitsWithDefault() *Limits {
	this := Limits{}
	return &this
}

// NewLimits is short for NewLimitsWithDefault which instantiates a new Limits object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLimits() *Limits {
	return NewLimitsWithDefault()
}

// NewLimitsEmpty instantiates a new Limits object with no properties set.
// This constructor will not assign any default values to properties.
func NewLimitsEmpty() *Limits {
	this := Limits{}
	return &this
}

// NewLimitss converts a list Limits pointers to objects.
// This is helpful when the SetLimits requires a list of objects
func NewLimitsList(ps ...*Limits) []Limits {
	objs := []Limits{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this Limits
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *Limits) Validate() error {
	if o.Storage == nil {
		return errors.New("Storage in Limits must be set")
	}
	// validate all nested properties
	return nil
}

// GetStorage returns the Storage field value
func (o *Limits) GetStorage() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *Limits) GetStorageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Storage, true
}

// SetStorage sets field value
func (o *Limits) SetStorage(v string) *Limits {
	o.Storage = &v
	return o
}

func (o Limits) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Limits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["storage"] = o.Storage
	return toSerialize, nil
}

type NullableLimits struct {
	value *Limits
	isSet bool
}

func (v *NullableLimits) Get() *Limits {
	return v.value
}

func (v *NullableLimits) Set(val *Limits) {
	v.value = val
	v.isSet = true
}

func (v *NullableLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLimits(val *Limits) *NullableLimits {
	return &NullableLimits{value: val, isSet: true}
}

func (v NullableLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
