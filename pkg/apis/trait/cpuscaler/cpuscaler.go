/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cpuscaler

import (
	"encoding/json"

	"github.com/oam-dev/kubevela-core-api/apis/core.oam.dev/common"
	"github.com/oam-dev/kubevela-core-api/pkg/oam/util"

	"github.com/kubevela-contrib/vela-go-sdk/pkg/apis"
	sdkcommon "github.com/kubevela-contrib/vela-go-sdk/pkg/apis/common"
	"github.com/kubevela-contrib/vela-go-sdk/pkg/apis/utils"
)

// checks if the CpuscalerSpec type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CpuscalerSpec{}

// CpuscalerSpec struct for CpuscalerSpec
type CpuscalerSpec struct {
	// Specify the average CPU utilization, for example, 50 means the CPU usage is 50%
	CpuUtil *int32 `json:"cpuUtil,omitempty"`
	// Specify the maximum number of of replicas to which the autoscaler can scale up
	Max *int32 `json:"max,omitempty"`
	// Specify the minimal number of replicas to which the autoscaler can scale down
	Min *int32 `json:"min,omitempty"`
	// Specify the apiVersion of scale target
	TargetAPIVersion *string `json:"targetAPIVersion,omitempty"`
	// Specify the kind of scale target
	TargetKind *string `json:"targetKind,omitempty"`
}

// NewCpuscalerSpecWith instantiates a new CpuscalerSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpuscalerSpecWith() *CpuscalerSpec {
	this := CpuscalerSpec{}
	var cpuUtil int32 = 50
	this.CpuUtil = &cpuUtil
	var max int32 = 10
	this.Max = &max
	var min int32 = 1
	this.Min = &min
	var targetAPIVersion string = "apps/v1"
	this.TargetAPIVersion = &targetAPIVersion
	var targetKind string = "Deployment"
	this.TargetKind = &targetKind
	return &this
}

// NewCpuscalerSpec instantiates a new CpuscalerSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpuscalerSpec() *CpuscalerSpec {
	this := CpuscalerSpec{}
	var cpuUtil int32 = 50
	this.CpuUtil = &cpuUtil
	var max int32 = 10
	this.Max = &max
	var min int32 = 1
	this.Min = &min
	var targetAPIVersion string = "apps/v1"
	this.TargetAPIVersion = &targetAPIVersion
	var targetKind string = "Deployment"
	this.TargetKind = &targetKind
	return &this
}

// NewCpuscalerSpecs converts a list CpuscalerSpec pointers to objects.
// This is helpful when the SetCpuscalerSpec requires a list of objects
func NewCpuscalerSpecList(ps ...*CpuscalerSpec) []CpuscalerSpec {
	objs := []CpuscalerSpec{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// GetCpuUtil returns the CpuUtil field value if set, zero value otherwise.
func (o *CpuscalerTrait) GetCpuUtil() int32 {
	if o == nil || utils.IsNil(o.Properties.CpuUtil) {
		var ret int32
		return ret
	}
	return *o.Properties.CpuUtil
}

// GetCpuUtilOk returns a tuple with the CpuUtil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuscalerTrait) GetCpuUtilOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Properties.CpuUtil) {
		return nil, false
	}
	return o.Properties.CpuUtil, true
}

// HasCpuUtil returns a boolean if a field has been set.
func (o *CpuscalerTrait) HasCpuUtil() bool {
	if o != nil && !utils.IsNil(o.Properties.CpuUtil) {
		return true
	}

	return false
}

// SetCpuUtil gets a reference to the given int32 and assigns it to the cpuUtil field.
// CpuUtil:  Specify the average CPU utilization, for example, 50 means the CPU usage is 50%
func (o *CpuscalerTrait) SetCpuUtil(v int32) *CpuscalerTrait {
	o.Properties.CpuUtil = &v
	return o
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *CpuscalerTrait) GetMax() int32 {
	if o == nil || utils.IsNil(o.Properties.Max) {
		var ret int32
		return ret
	}
	return *o.Properties.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuscalerTrait) GetMaxOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Properties.Max) {
		return nil, false
	}
	return o.Properties.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *CpuscalerTrait) HasMax() bool {
	if o != nil && !utils.IsNil(o.Properties.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int32 and assigns it to the max field.
// Max:  Specify the maximum number of of replicas to which the autoscaler can scale up
func (o *CpuscalerTrait) SetMax(v int32) *CpuscalerTrait {
	o.Properties.Max = &v
	return o
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *CpuscalerTrait) GetMin() int32 {
	if o == nil || utils.IsNil(o.Properties.Min) {
		var ret int32
		return ret
	}
	return *o.Properties.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuscalerTrait) GetMinOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.Properties.Min) {
		return nil, false
	}
	return o.Properties.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *CpuscalerTrait) HasMin() bool {
	if o != nil && !utils.IsNil(o.Properties.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given int32 and assigns it to the min field.
// Min:  Specify the minimal number of replicas to which the autoscaler can scale down
func (o *CpuscalerTrait) SetMin(v int32) *CpuscalerTrait {
	o.Properties.Min = &v
	return o
}

// GetTargetAPIVersion returns the TargetAPIVersion field value if set, zero value otherwise.
func (o *CpuscalerTrait) GetTargetAPIVersion() string {
	if o == nil || utils.IsNil(o.Properties.TargetAPIVersion) {
		var ret string
		return ret
	}
	return *o.Properties.TargetAPIVersion
}

// GetTargetAPIVersionOk returns a tuple with the TargetAPIVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuscalerTrait) GetTargetAPIVersionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Properties.TargetAPIVersion) {
		return nil, false
	}
	return o.Properties.TargetAPIVersion, true
}

// HasTargetAPIVersion returns a boolean if a field has been set.
func (o *CpuscalerTrait) HasTargetAPIVersion() bool {
	if o != nil && !utils.IsNil(o.Properties.TargetAPIVersion) {
		return true
	}

	return false
}

// SetTargetAPIVersion gets a reference to the given string and assigns it to the targetAPIVersion field.
// TargetAPIVersion:  Specify the apiVersion of scale target
func (o *CpuscalerTrait) SetTargetAPIVersion(v string) *CpuscalerTrait {
	o.Properties.TargetAPIVersion = &v
	return o
}

// GetTargetKind returns the TargetKind field value if set, zero value otherwise.
func (o *CpuscalerTrait) GetTargetKind() string {
	if o == nil || utils.IsNil(o.Properties.TargetKind) {
		var ret string
		return ret
	}
	return *o.Properties.TargetKind
}

// GetTargetKindOk returns a tuple with the TargetKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuscalerTrait) GetTargetKindOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Properties.TargetKind) {
		return nil, false
	}
	return o.Properties.TargetKind, true
}

// HasTargetKind returns a boolean if a field has been set.
func (o *CpuscalerTrait) HasTargetKind() bool {
	if o != nil && !utils.IsNil(o.Properties.TargetKind) {
		return true
	}

	return false
}

// SetTargetKind gets a reference to the given string and assigns it to the targetKind field.
// TargetKind:  Specify the kind of scale target
func (o *CpuscalerTrait) SetTargetKind(v string) *CpuscalerTrait {
	o.Properties.TargetKind = &v
	return o
}

func (o CpuscalerSpec) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CpuscalerSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.CpuUtil) {
		toSerialize["cpuUtil"] = o.CpuUtil
	}
	if !utils.IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !utils.IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	if !utils.IsNil(o.TargetAPIVersion) {
		toSerialize["targetAPIVersion"] = o.TargetAPIVersion
	}
	if !utils.IsNil(o.TargetKind) {
		toSerialize["targetKind"] = o.TargetKind
	}
	return toSerialize, nil
}

type NullableCpuscalerSpec struct {
	value *CpuscalerSpec
	isSet bool
}

func (v NullableCpuscalerSpec) Get() *CpuscalerSpec {
	return v.value
}

func (v *NullableCpuscalerSpec) Set(val *CpuscalerSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCpuscalerSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCpuscalerSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpuscalerSpec(val *CpuscalerSpec) *NullableCpuscalerSpec {
	return &NullableCpuscalerSpec{value: val, isSet: true}
}

func (v NullableCpuscalerSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpuscalerSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

const CpuscalerType = "cpuscaler"

func init() {
	sdkcommon.RegisterTrait(CpuscalerType, FromTrait)
}

type CpuscalerTrait struct {
	Base       apis.TraitBase
	Properties CpuscalerSpec
}

func Cpuscaler() *CpuscalerTrait {
	c := &CpuscalerTrait{Base: apis.TraitBase{}}
	return c
}

func (c *CpuscalerTrait) Build() common.ApplicationTrait {
	res := common.ApplicationTrait{
		Properties: util.Object2RawExtension(c.Properties),
		Type:       CpuscalerType,
	}
	return res
}

func (c *CpuscalerTrait) FromTrait(from common.ApplicationTrait) (*CpuscalerTrait, error) {
	var properties CpuscalerSpec
	if from.Properties != nil {
		err := json.Unmarshal(from.Properties.Raw, &properties)
		if err != nil {
			return nil, err
		}
	}
	c.Base.Type = CpuscalerType
	c.Properties = properties
	return c, nil
}

func FromTrait(from common.ApplicationTrait) (apis.Trait, error) {
	c := &CpuscalerTrait{}
	return c.FromTrait(from)
}

func (c *CpuscalerTrait) DefType() string {
	return CpuscalerType
}
