/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export2secret

import (
	"encoding/json"
	"errors"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the DockerRegistry type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DockerRegistry{}

// DockerRegistry Specify the docker data
type DockerRegistry struct {
	// Specify the password of the docker registry
	Password *string `json:"password"`
	// Specify the server of the docker registry
	Server *string `json:"server"`
	// Specify the username of the docker registry
	Username *string `json:"username"`
}

// NewDockerRegistryWith instantiates a new DockerRegistry object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewDockerRegistryWith(password string, server string, username string) *DockerRegistry {
	this := DockerRegistry{}
	this.Password = &password
	this.Server = &server
	this.Username = &username
	return &this
}

// NewDockerRegistryWithDefault instantiates a new DockerRegistry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerRegistryWithDefault() *DockerRegistry {
	this := DockerRegistry{}
	var server string = "https://index.docker.io/v1/"
	this.Server = &server
	return &this
}

// NewDockerRegistry is short for NewDockerRegistryWithDefault which instantiates a new DockerRegistry object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerRegistry() *DockerRegistry {
	return NewDockerRegistryWithDefault()
}

// NewDockerRegistryEmpty instantiates a new DockerRegistry object with no properties set.
// This constructor will not assign any default values to properties.
func NewDockerRegistryEmpty() *DockerRegistry {
	this := DockerRegistry{}
	return &this
}

// NewDockerRegistrys converts a list DockerRegistry pointers to objects.
// This is helpful when the SetDockerRegistry requires a list of objects
func NewDockerRegistryList(ps ...*DockerRegistry) []DockerRegistry {
	objs := []DockerRegistry{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this DockerRegistry
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *DockerRegistry) Validate() error {
	if o.Password == nil {
		return errors.New("Password in DockerRegistry must be set")
	}
	if o.Server == nil {
		return errors.New("Server in DockerRegistry must be set")
	}
	if o.Username == nil {
		return errors.New("Username in DockerRegistry must be set")
	}
	// validate all nested properties
	return nil
}

// GetPassword returns the Password field value
func (o *DockerRegistry) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *DockerRegistry) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password, true
}

// SetPassword sets field value
func (o *DockerRegistry) SetPassword(v string) *DockerRegistry {
	o.Password = &v
	return o
}

// GetServer returns the Server field value
func (o *DockerRegistry) GetServer() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Server
}

// GetServerOk returns a tuple with the Server field value
// and a boolean to check if the value has been set.
func (o *DockerRegistry) GetServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Server, true
}

// SetServer sets field value
func (o *DockerRegistry) SetServer(v string) *DockerRegistry {
	o.Server = &v
	return o
}

// GetUsername returns the Username field value
func (o *DockerRegistry) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *DockerRegistry) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username, true
}

// SetUsername sets field value
func (o *DockerRegistry) SetUsername(v string) *DockerRegistry {
	o.Username = &v
	return o
}

func (o DockerRegistry) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DockerRegistry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["password"] = o.Password
	toSerialize["server"] = o.Server
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

type NullableDockerRegistry struct {
	value *DockerRegistry
	isSet bool
}

func (v *NullableDockerRegistry) Get() *DockerRegistry {
	return v.value
}

func (v *NullableDockerRegistry) Set(val *DockerRegistry) {
	v.value = val
	v.isSet = true
}

func (v *NullableDockerRegistry) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerRegistry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerRegistry(val *DockerRegistry) *NullableDockerRegistry {
	return &NullableDockerRegistry{value: val, isSet: true}
}

func (v NullableDockerRegistry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerRegistry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
