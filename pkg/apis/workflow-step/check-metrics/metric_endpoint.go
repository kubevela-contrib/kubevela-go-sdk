/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package check_metrics

import (
	"encoding/json"
	"fmt"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// MetricEndpoint - The HTTP address and port of the prometheus server
type MetricEndpoint struct {
	String *string
}

// StringAsMetricEndpoint is is a convenience function that returns string wrapped in MetricEndpoint
func StringAsMetricEndpoint(v *string) MetricEndpoint {
	return MetricEndpoint{
		String: v,
	}
}

// Validate validates this MetricEndpoint
func (o *MetricEndpoint) Validate() error {
	if o.String != nil {
		return nil
	}

	return fmt.Errorf("No oneOf schemas were matched in MetricEndpoint")
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *MetricEndpoint) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into String
	err = utils.NewStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(MetricEndpoint)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(MetricEndpoint)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src MetricEndpoint) MarshalJSON() ([]byte, error) {
	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *MetricEndpoint) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableMetricEndpoint struct {
	value *MetricEndpoint
	isSet bool
}

func (v *NullableMetricEndpoint) Get() *MetricEndpoint {
	return v.value
}

func (v *NullableMetricEndpoint) Set(val *MetricEndpoint) {
	v.value = val
	v.isSet = true
}

func (v *NullableMetricEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricEndpoint(val *MetricEndpoint) *NullableMetricEndpoint {
	return &NullableMetricEndpoint{value: val, isSet: true}
}

func (v NullableMetricEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
