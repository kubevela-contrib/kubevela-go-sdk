/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"
	"errors"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the Text type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Text{}

// Text Specify the message content of dingtalk notification
type Text struct {
	Content *string `json:"content"`
}

// NewTextWith instantiates a new Text object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewTextWith(content string) *Text {
	this := Text{}
	this.Content = &content
	return &this
}

// NewTextWithDefault instantiates a new Text object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTextWithDefault() *Text {
	this := Text{}
	return &this
}

// NewText is short for NewTextWithDefault which instantiates a new Text object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewText() *Text {
	return NewTextWithDefault()
}

// NewTextEmpty instantiates a new Text object with no properties set.
// This constructor will not assign any default values to properties.
func NewTextEmpty() *Text {
	this := Text{}
	return &this
}

// NewTexts converts a list Text pointers to objects.
// This is helpful when the SetText requires a list of objects
func NewTextList(ps ...*Text) []Text {
	objs := []Text{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this Text
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *Text) Validate() error {
	if o.Content == nil {
		return errors.New("Content in Text must be set")
	}
	// validate all nested properties
	return nil
}

// GetContent returns the Content field value
func (o *Text) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *Text) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content, true
}

// SetContent sets field value
func (o *Text) SetContent(v string) *Text {
	o.Content = &v
	return o
}

func (o Text) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Text) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content"] = o.Content
	return toSerialize, nil
}

type NullableText struct {
	value *Text
	isSet bool
}

func (v *NullableText) Get() *Text {
	return v.value
}

func (v *NullableText) Set(val *Text) {
	v.value = val
	v.isSet = true
}

func (v *NullableText) IsSet() bool {
	return v.isSet
}

func (v *NullableText) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableText(val *Text) *NullableText {
	return &NullableText{value: val, isSet: true}
}

func (v NullableText) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableText) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
