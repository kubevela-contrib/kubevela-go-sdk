/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the DispatchActionConfig type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &DispatchActionConfig{}

// DispatchActionConfig struct for DispatchActionConfig
type DispatchActionConfig struct {
	TriggerActionsOn []string `json:"trigger_actions_on,omitempty"`
}

// NewDispatchActionConfigWith instantiates a new DispatchActionConfig object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewDispatchActionConfigWith() *DispatchActionConfig {
	this := DispatchActionConfig{}
	return &this
}

// NewDispatchActionConfigWithDefault instantiates a new DispatchActionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDispatchActionConfigWithDefault() *DispatchActionConfig {
	this := DispatchActionConfig{}
	return &this
}

// NewDispatchActionConfig is short for NewDispatchActionConfigWithDefault which instantiates a new DispatchActionConfig object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDispatchActionConfig() *DispatchActionConfig {
	return NewDispatchActionConfigWithDefault()
}

// NewDispatchActionConfigEmpty instantiates a new DispatchActionConfig object with no properties set.
// This constructor will not assign any default values to properties.
func NewDispatchActionConfigEmpty() *DispatchActionConfig {
	this := DispatchActionConfig{}
	return &this
}

// NewDispatchActionConfigs converts a list DispatchActionConfig pointers to objects.
// This is helpful when the SetDispatchActionConfig requires a list of objects
func NewDispatchActionConfigList(ps ...*DispatchActionConfig) []DispatchActionConfig {
	objs := []DispatchActionConfig{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this DispatchActionConfig
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *DispatchActionConfig) Validate() error {
	// validate all nested properties
	return nil
}

// GetTriggerActionsOn returns the TriggerActionsOn field value if set, zero value otherwise.
func (o *DispatchActionConfig) GetTriggerActionsOn() []string {
	if o == nil || utils.IsNil(o.TriggerActionsOn) {
		var ret []string
		return ret
	}
	return o.TriggerActionsOn
}

// GetTriggerActionsOnOk returns a tuple with the TriggerActionsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DispatchActionConfig) GetTriggerActionsOnOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.TriggerActionsOn) {
		return nil, false
	}
	return o.TriggerActionsOn, true
}

// HasTriggerActionsOn returns a boolean if a field has been set.
func (o *DispatchActionConfig) HasTriggerActionsOn() bool {
	if o != nil && !utils.IsNil(o.TriggerActionsOn) {
		return true
	}

	return false
}

// SetTriggerActionsOn gets a reference to the given []string and assigns it to the triggerActionsOn field.
// TriggerActionsOn:
func (o *DispatchActionConfig) SetTriggerActionsOn(v []string) *DispatchActionConfig {
	o.TriggerActionsOn = v
	return o
}

func (o DispatchActionConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DispatchActionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.TriggerActionsOn) {
		toSerialize["trigger_actions_on"] = o.TriggerActionsOn
	}
	return toSerialize, nil
}

type NullableDispatchActionConfig struct {
	value *DispatchActionConfig
	isSet bool
}

func (v *NullableDispatchActionConfig) Get() *DispatchActionConfig {
	return v.value
}

func (v *NullableDispatchActionConfig) Set(val *DispatchActionConfig) {
	v.value = val
	v.isSet = true
}

func (v *NullableDispatchActionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDispatchActionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDispatchActionConfig(val *DispatchActionConfig) *NullableDispatchActionConfig {
	return &NullableDispatchActionConfig{value: val, isSet: true}
}

func (v NullableDispatchActionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDispatchActionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
