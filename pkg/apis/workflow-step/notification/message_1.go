/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package notification

import (
	"encoding/json"
	"errors"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the Message1 type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Message1{}

// Message1 Specify the message that you want to sent, refer to [Lark messaging](https://open.feishu.cn/document/ukTMukTMukTM/ucTM5YjL3ETO24yNxkjN#8b0f2a1b).
type Message1 struct {
	// content should be json encode string
	Content *string `json:"content"`
	// msg_type can be text, post, image, interactive, share_chat, share_user, audio, media, file, sticker
	MsgType *string `json:"msg_type"`
}

// NewMessage1With instantiates a new Message1 object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewMessage1With(content string, msgType string) *Message1 {
	this := Message1{}
	this.Content = &content
	this.MsgType = &msgType
	return &this
}

// NewMessage1WithDefault instantiates a new Message1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessage1WithDefault() *Message1 {
	this := Message1{}
	return &this
}

// NewMessage1 is short for NewMessage1WithDefault which instantiates a new Message1 object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessage1() *Message1 {
	return NewMessage1WithDefault()
}

// NewMessage1Empty instantiates a new Message1 object with no properties set.
// This constructor will not assign any default values to properties.
func NewMessage1Empty() *Message1 {
	this := Message1{}
	return &this
}

// NewMessage1s converts a list Message1 pointers to objects.
// This is helpful when the SetMessage1 requires a list of objects
func NewMessage1List(ps ...*Message1) []Message1 {
	objs := []Message1{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this Message1
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *Message1) Validate() error {
	if o.Content == nil {
		return errors.New("Content in Message1 must be set")
	}
	if o.MsgType == nil {
		return errors.New("MsgType in Message1 must be set")
	}
	// validate all nested properties
	return nil
}

// GetContent returns the Content field value
func (o *Message1) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *Message1) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content, true
}

// SetContent sets field value
func (o *Message1) SetContent(v string) *Message1 {
	o.Content = &v
	return o
}

// GetMsgType returns the MsgType field value
func (o *Message1) GetMsgType() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.MsgType
}

// GetMsgTypeOk returns a tuple with the MsgType field value
// and a boolean to check if the value has been set.
func (o *Message1) GetMsgTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MsgType, true
}

// SetMsgType sets field value
func (o *Message1) SetMsgType(v string) *Message1 {
	o.MsgType = &v
	return o
}

func (o Message1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Message1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content"] = o.Content
	toSerialize["msg_type"] = o.MsgType
	return toSerialize, nil
}

type NullableMessage1 struct {
	value *Message1
	isSet bool
}

func (v *NullableMessage1) Get() *Message1 {
	return v.value
}

func (v *NullableMessage1) Set(val *Message1) {
	v.value = val
	v.isSet = true
}

func (v *NullableMessage1) IsSet() bool {
	return v.isSet
}

func (v *NullableMessage1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessage1(val *Message1) *NullableMessage1 {
	return &NullableMessage1{value: val, isSet: true}
}

func (v NullableMessage1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessage1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
