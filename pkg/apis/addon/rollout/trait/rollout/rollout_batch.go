/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rollout

import (
	"encoding/json"
	"errors"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the RolloutBatch type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &RolloutBatch{}

// RolloutBatch struct for RolloutBatch
type RolloutBatch struct {
	Replicas *int32 `json:"replicas"`
}

// NewRolloutBatchWith instantiates a new RolloutBatch object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewRolloutBatchWith(replicas int32) *RolloutBatch {
	this := RolloutBatch{}
	this.Replicas = &replicas
	return &this
}

// NewRolloutBatchWithDefault instantiates a new RolloutBatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolloutBatchWithDefault() *RolloutBatch {
	this := RolloutBatch{}
	return &this
}

// NewRolloutBatch is short for NewRolloutBatchWithDefault which instantiates a new RolloutBatch object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolloutBatch() *RolloutBatch {
	return NewRolloutBatchWithDefault()
}

// NewRolloutBatchEmpty instantiates a new RolloutBatch object with no properties set.
// This constructor will not assign any default values to properties.
func NewRolloutBatchEmpty() *RolloutBatch {
	this := RolloutBatch{}
	return &this
}

// NewRolloutBatchs converts a list RolloutBatch pointers to objects.
// This is helpful when the SetRolloutBatch requires a list of objects
func NewRolloutBatchList(ps ...*RolloutBatch) []RolloutBatch {
	objs := []RolloutBatch{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this RolloutBatch
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *RolloutBatch) Validate() error {
	if o.Replicas == nil {
		return errors.New("Replicas in RolloutBatch must be set")
	}
	// validate all nested properties
	return nil
}

// GetReplicas returns the Replicas field value
func (o *RolloutBatch) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *RolloutBatch) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Replicas, true
}

// SetReplicas sets field value
func (o *RolloutBatch) SetReplicas(v int32) *RolloutBatch {
	o.Replicas = &v
	return o
}

func (o RolloutBatch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RolloutBatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["replicas"] = o.Replicas
	return toSerialize, nil
}

type NullableRolloutBatch struct {
	value *RolloutBatch
	isSet bool
}

func (v *NullableRolloutBatch) Get() *RolloutBatch {
	return v.value
}

func (v *NullableRolloutBatch) Set(val *RolloutBatch) {
	v.value = val
	v.isSet = true
}

func (v *NullableRolloutBatch) IsSet() bool {
	return v.isSet
}

func (v *NullableRolloutBatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolloutBatch(val *RolloutBatch) *NullableRolloutBatch {
	return &NullableRolloutBatch{value: val, isSet: true}
}

func (v NullableRolloutBatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolloutBatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
