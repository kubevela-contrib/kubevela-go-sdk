/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kruise_rollout

import (
	"encoding/json"
	"errors"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the TrafficRouting type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &TrafficRouting{}

// TrafficRouting struct for TrafficRouting
type TrafficRouting struct {
	// refers to the name of an `HTTPRoute` of gateway API.
	GatewayHTTPRouteName *string `json:"gatewayHTTPRouteName,omitempty"`
	GracePeriodSeconds   *int32  `json:"gracePeriodSeconds"`
	// refers to the ingress as traffic route. Use context.name as service if not filled
	IngressName *string `json:"ingressName,omitempty"`
	// holds the name of a service which selects pods with stable version and don't select any pods with canary version. Use context.name as service if not filled
	Service *string `json:"service,omitempty"`
	// specify the type of traffic route, can be ingress or gateway.
	Type *string `json:"type"`
}

// NewTrafficRoutingWith instantiates a new TrafficRouting object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewTrafficRoutingWith(gracePeriodSeconds int32, type_ string) *TrafficRouting {
	this := TrafficRouting{}
	this.GracePeriodSeconds = &gracePeriodSeconds
	this.Type = &type_
	return &this
}

// NewTrafficRoutingWithDefault instantiates a new TrafficRouting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrafficRoutingWithDefault() *TrafficRouting {
	this := TrafficRouting{}
	var gracePeriodSeconds int32 = 5
	this.GracePeriodSeconds = &gracePeriodSeconds
	var type_ string = "ingress"
	this.Type = &type_
	return &this
}

// NewTrafficRouting is short for NewTrafficRoutingWithDefault which instantiates a new TrafficRouting object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrafficRouting() *TrafficRouting {
	return NewTrafficRoutingWithDefault()
}

// NewTrafficRoutingEmpty instantiates a new TrafficRouting object with no properties set.
// This constructor will not assign any default values to properties.
func NewTrafficRoutingEmpty() *TrafficRouting {
	this := TrafficRouting{}
	return &this
}

// NewTrafficRoutings converts a list TrafficRouting pointers to objects.
// This is helpful when the SetTrafficRouting requires a list of objects
func NewTrafficRoutingList(ps ...*TrafficRouting) []TrafficRouting {
	objs := []TrafficRouting{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this TrafficRouting
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *TrafficRouting) Validate() error {
	if o.GracePeriodSeconds == nil {
		return errors.New("GracePeriodSeconds in TrafficRouting must be set")
	}
	if o.Type == nil {
		return errors.New("Type in TrafficRouting must be set")
	}
	// validate all nested properties
	return nil
}

// GetGatewayHTTPRouteName returns the GatewayHTTPRouteName field value if set, zero value otherwise.
func (o *TrafficRouting) GetGatewayHTTPRouteName() string {
	if o == nil || utils.IsNil(o.GatewayHTTPRouteName) {
		var ret string
		return ret
	}
	return *o.GatewayHTTPRouteName
}

// GetGatewayHTTPRouteNameOk returns a tuple with the GatewayHTTPRouteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficRouting) GetGatewayHTTPRouteNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.GatewayHTTPRouteName) {
		return nil, false
	}
	return o.GatewayHTTPRouteName, true
}

// HasGatewayHTTPRouteName returns a boolean if a field has been set.
func (o *TrafficRouting) HasGatewayHTTPRouteName() bool {
	if o != nil && !utils.IsNil(o.GatewayHTTPRouteName) {
		return true
	}

	return false
}

// SetGatewayHTTPRouteName gets a reference to the given string and assigns it to the gatewayHTTPRouteName field.
// GatewayHTTPRouteName:  refers to the name of an `HTTPRoute` of gateway API.
func (o *TrafficRouting) SetGatewayHTTPRouteName(v string) *TrafficRouting {
	o.GatewayHTTPRouteName = &v
	return o
}

// GetGracePeriodSeconds returns the GracePeriodSeconds field value
func (o *TrafficRouting) GetGracePeriodSeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return *o.GracePeriodSeconds
}

// GetGracePeriodSecondsOk returns a tuple with the GracePeriodSeconds field value
// and a boolean to check if the value has been set.
func (o *TrafficRouting) GetGracePeriodSecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GracePeriodSeconds, true
}

// SetGracePeriodSeconds sets field value
func (o *TrafficRouting) SetGracePeriodSeconds(v int32) *TrafficRouting {
	o.GracePeriodSeconds = &v
	return o
}

// GetIngressName returns the IngressName field value if set, zero value otherwise.
func (o *TrafficRouting) GetIngressName() string {
	if o == nil || utils.IsNil(o.IngressName) {
		var ret string
		return ret
	}
	return *o.IngressName
}

// GetIngressNameOk returns a tuple with the IngressName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficRouting) GetIngressNameOk() (*string, bool) {
	if o == nil || utils.IsNil(o.IngressName) {
		return nil, false
	}
	return o.IngressName, true
}

// HasIngressName returns a boolean if a field has been set.
func (o *TrafficRouting) HasIngressName() bool {
	if o != nil && !utils.IsNil(o.IngressName) {
		return true
	}

	return false
}

// SetIngressName gets a reference to the given string and assigns it to the ingressName field.
// IngressName:  refers to the ingress as traffic route. Use context.name as service if not filled
func (o *TrafficRouting) SetIngressName(v string) *TrafficRouting {
	o.IngressName = &v
	return o
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *TrafficRouting) GetService() string {
	if o == nil || utils.IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficRouting) GetServiceOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *TrafficRouting) HasService() bool {
	if o != nil && !utils.IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the service field.
// Service:  holds the name of a service which selects pods with stable version and don't select any pods with canary version. Use context.name as service if not filled
func (o *TrafficRouting) SetService(v string) *TrafficRouting {
	o.Service = &v
	return o
}

// GetType returns the Type field value
func (o *TrafficRouting) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TrafficRouting) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *TrafficRouting) SetType(v string) *TrafficRouting {
	o.Type = &v
	return o
}

func (o TrafficRouting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrafficRouting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.GatewayHTTPRouteName) {
		toSerialize["gatewayHTTPRouteName"] = o.GatewayHTTPRouteName
	}
	toSerialize["gracePeriodSeconds"] = o.GracePeriodSeconds
	if !utils.IsNil(o.IngressName) {
		toSerialize["ingressName"] = o.IngressName
	}
	if !utils.IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableTrafficRouting struct {
	value *TrafficRouting
	isSet bool
}

func (v *NullableTrafficRouting) Get() *TrafficRouting {
	return v.value
}

func (v *NullableTrafficRouting) Set(val *TrafficRouting) {
	v.value = val
	v.isSet = true
}

func (v *NullableTrafficRouting) IsSet() bool {
	return v.isSet
}

func (v *NullableTrafficRouting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrafficRouting(val *TrafficRouting) *NullableTrafficRouting {
	return &NullableTrafficRouting{value: val, isSet: true}
}

func (v NullableTrafficRouting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrafficRouting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
