/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kruise_rollout

import (
	"encoding/json"
	"fmt"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// Replicas - Define the replicas of release to the new version in each step, e.g., 5, 10...
type Replicas struct {
	Int32  *int32
	String *string
}

// Int32AsReplicas is is a convenience function that returns int32 wrapped in Replicas
func Int32AsReplicas(v *int32) Replicas {
	return Replicas{
		Int32: v,
	}
}

// StringAsReplicas is is a convenience function that returns string wrapped in Replicas
func StringAsReplicas(v *string) Replicas {
	return Replicas{
		String: v,
	}
}

// Validate validates this Replicas
func (o *Replicas) Validate() error {
	if o.Int32 != nil {
		return nil
	}

	if o.String != nil {
		return nil
	}

	return fmt.Errorf("No oneOf schemas were matched in Replicas")
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *Replicas) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Int32
	err = utils.NewStrictDecoder(data).Decode(&dst.Int32)
	if err == nil {
		jsonInt32, _ := json.Marshal(dst.Int32)
		if string(jsonInt32) == "{}" { // empty struct
			dst.Int32 = nil
		} else {
			match++
		}
	} else {
		dst.Int32 = nil
	}

	// try to unmarshal data into String
	err = utils.NewStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Int32 = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(Replicas)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(Replicas)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src Replicas) MarshalJSON() ([]byte, error) {
	if src.Int32 != nil {
		return json.Marshal(&src.Int32)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *Replicas) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Int32 != nil {
		return obj.Int32
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableReplicas struct {
	value *Replicas
	isSet bool
}

func (v *NullableReplicas) Get() *Replicas {
	return v.value
}

func (v *NullableReplicas) Set(val *Replicas) {
	v.value = val
	v.isSet = true
}

func (v *NullableReplicas) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicas(val *Replicas) *NullableReplicas {
	return &NullableReplicas{value: val, isSet: true}
}

func (v NullableReplicas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
