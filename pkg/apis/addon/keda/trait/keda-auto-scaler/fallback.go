/*
Generated by cue.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: no version
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keda_auto_scaler

import (
	"encoding/json"
	"errors"

	"github.com/kubevela-contrib/kubevela-go-sdk/pkg/apis/utils"
)

// checks if the Fallback type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Fallback{}

// Fallback Specify the fallback value when the metrics server is not available.
type Fallback struct {
	// Specify the failure threshold of the scaler. Default: 3.
	FailureThreshold *int32 `json:"failureThreshold"`
	// Specify the replica when failed to get metrics. Default to minReplicaCount.
	Replicas *int32 `json:"replicas"`
}

// NewFallbackWith instantiates a new Fallback object
// This constructor will make sure properties required by API are set.
// For optional properties, it will set default values if they have been defined.
// The set of arguments will change when the set of required properties is changed
func NewFallbackWith(failureThreshold int32, replicas int32) *Fallback {
	this := Fallback{}
	this.FailureThreshold = &failureThreshold
	this.Replicas = &replicas
	return &this
}

// NewFallbackWithDefault instantiates a new Fallback object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFallbackWithDefault() *Fallback {
	this := Fallback{}
	var failureThreshold int32 = 3
	this.FailureThreshold = &failureThreshold
	var replicas int32 = 1
	this.Replicas = &replicas
	return &this
}

// NewFallback is short for NewFallbackWithDefault which instantiates a new Fallback object.
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFallback() *Fallback {
	return NewFallbackWithDefault()
}

// NewFallbackEmpty instantiates a new Fallback object with no properties set.
// This constructor will not assign any default values to properties.
func NewFallbackEmpty() *Fallback {
	this := Fallback{}
	return &this
}

// NewFallbacks converts a list Fallback pointers to objects.
// This is helpful when the SetFallback requires a list of objects
func NewFallbackList(ps ...*Fallback) []Fallback {
	objs := []Fallback{}
	for _, p := range ps {
		objs = append(objs, *p)
	}
	return objs
}

// Validate validates this Fallback
// 1. If the required properties are not set, this will return an error
// 2. If properties are set, will check if nested required properties are set
func (o *Fallback) Validate() error {
	if o.FailureThreshold == nil {
		return errors.New("FailureThreshold in Fallback must be set")
	}
	if o.Replicas == nil {
		return errors.New("Replicas in Fallback must be set")
	}
	// validate all nested properties
	return nil
}

// GetFailureThreshold returns the FailureThreshold field value
func (o *Fallback) GetFailureThreshold() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return *o.FailureThreshold
}

// GetFailureThresholdOk returns a tuple with the FailureThreshold field value
// and a boolean to check if the value has been set.
func (o *Fallback) GetFailureThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailureThreshold, true
}

// SetFailureThreshold sets field value
func (o *Fallback) SetFailureThreshold(v int32) *Fallback {
	o.FailureThreshold = &v
	return o
}

// GetReplicas returns the Replicas field value
func (o *Fallback) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *Fallback) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Replicas, true
}

// SetReplicas sets field value
func (o *Fallback) SetReplicas(v int32) *Fallback {
	o.Replicas = &v
	return o
}

func (o Fallback) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Fallback) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["failureThreshold"] = o.FailureThreshold
	toSerialize["replicas"] = o.Replicas
	return toSerialize, nil
}

type NullableFallback struct {
	value *Fallback
	isSet bool
}

func (v *NullableFallback) Get() *Fallback {
	return v.value
}

func (v *NullableFallback) Set(val *Fallback) {
	v.value = val
	v.isSet = true
}

func (v *NullableFallback) IsSet() bool {
	return v.isSet
}

func (v *NullableFallback) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFallback(val *Fallback) *NullableFallback {
	return &NullableFallback{value: val, isSet: true}
}

func (v NullableFallback) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFallback) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
